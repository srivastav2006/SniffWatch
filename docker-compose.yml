version: '3.8'

services:
  # IDS Central Collector
  ids-collector:
    build: .
    container_name: ids-collector
    command: python sniffer_ids.py -i eth0 --window 10 --port-threshold 15 --flood-threshold 80
    networks:
      - monitoring-network
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    volumes:
      - ./logs:/app/logs
      - ./captures:/app/captures
    environment:
      - NODE_NAME=collector
      - IDS_MODE=collector

  # Sniffer Node 1
  sniffer-node1:
    build: .
    container_name: sniffer-node1
    command: python sniffer.py -i eth0 --pcap /app/captures/node1.pcap -q
    networks:
      - monitoring-network
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    environment:
      - NODE_NAME=node1
      - IDS_COLLECTOR=ids-collector

  # Sniffer Node 2
  sniffer-node2:
    build: .
    container_name: sniffer-node2
    command: python sniffer.py -i eth0 --pcap /app/captures/node2.pcap -q
    networks:
      - monitoring-network
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    environment:
      - NODE_NAME=node2
      - IDS_COLLECTOR=ids-collector

  # Sniffer Node 3
  sniffer-node3:
    build: .
    container_name: sniffer-node3
    command: python sniffer.py -i eth0 --pcap /app/captures/node3.pcap -q
    networks:
      - monitoring-network
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    environment:
      - NODE_NAME=node3
      - IDS_COLLECTOR=ids-collector

networks:
  monitoring-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  captures:
  logs:
