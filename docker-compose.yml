version: '3.8'

services:
  # Central IDS collector
  ids-central:
    build: .
    container_name: ids-central
    hostname: ids-central
    environment:
      - NODE_TYPE=IDS
      - NODE_ID=central
    networks:
      - monitoring-network
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    command: >
      python sniffer_ids.py 
      --window 10 
      --port-threshold 20 
      --flood-threshold 100
    restart: unless-stopped
    ports:
      - "8080:8080"  # For potential web interface

  # Sniffer node 1
  sniffer-node1:
    build: .
    container_name: sniffer-node1
    hostname: sniffer-node1
    environment:
      - NODE_TYPE=SNIFFER
      - NODE_ID=node1
      - IDS_CENTRAL_HOST=ids-central
    networks:
      - monitoring-network
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    command: >
      python distributed_sniffer.py 
      --node-id node1 
      --ids-host ids-central 
      --ids-port 9999
    restart: unless-stopped
    depends_on:
      - ids-central

  # Sniffer node 2
  sniffer-node2:
    build: .
    container_name: sniffer-node2
    hostname: sniffer-node2
    environment:
      - NODE_TYPE=SNIFFER
      - NODE_ID=node2
      - IDS_CENTRAL_HOST=ids-central
    networks:
      - monitoring-network
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    command: >
      python distributed_sniffer.py 
      --node-id node2 
      --ids-host ids-central 
      --ids-port 9999
    restart: unless-stopped
    depends_on:
      - ids-central

  # Sniffer node 3
  sniffer-node3:
    build: .
    container_name: sniffer-node3
    hostname: sniffer-node3
    environment:
      - NODE_TYPE=SNIFFER
      - NODE_ID=node3
      - IDS_CENTRAL_HOST=ids-central
    networks:
      - monitoring-network
    volumes:
      - ./captures:/app/captures
      - ./logs:/app/logs
    cap_add:
      - NET_ADMIN
      - NET_RAW
    privileged: true
    command: >
      python distributed_sniffer.py 
      --node-id node3 
      --ids-host ids-central 
      --ids-port 9999
    restart: unless-stopped
    depends_on:
      - ids-central

networks:
  monitoring-network:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 172.20.0.0/16

volumes:
  captures:
    driver: local
  logs:
    driver: local
